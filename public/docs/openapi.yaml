openapi: 3.0.3
info:
  title: 'API ЦНАП Дружківка'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'https://estater.biz'
paths:
  /api/v1/queues:
    get:
      summary: 'List of queues'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 16
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 16
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: neque
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: neque
        -
          in: query
          name: status
          description: 'Статус очереди'
          example: 12
          required: false
          schema:
            type: integer
            description: 'Статус очереди'
            example: 12
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Queues
      security: []
  /api/v1/queue:
    post:
      summary: 'Create queue'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Queues
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Название очереди'
                  example: dolorem
                status:
                  type: integer
                  description: 'optional Статус очереди (1 - активная, 0 - не активная)'
                  example: 8
                is_cron:
                  type: integer
                  description: 'optional Название очереди'
                  example: 7
                slot_duration:
                  type: integer
                  description: 'optional Длительность слота, мин'
                  example: 8
                mon:
                  type: string
                  description: 'optional Время работы в понедельник (08:00-17:00)'
                  example: laborum
                tue:
                  type: string
                  description: 'optional Время работы во вторник'
                  example: veniam
                wed:
                  type: string
                  description: 'optional Время работы в среду'
                  example: omnis
                thu:
                  type: string
                  description: 'optional Время работы в четверг'
                  example: dolores
                fri:
                  type: string
                  description: 'optional Время работы в пятницу'
                  example: beatae
                sat:
                  type: string
                  description: 'optional Время работы в субботу'
                  example: ut
                sun:
                  type: string
                  description: 'optional Время работы в воскресенье'
                  example: incidunt
                break:
                  type: string
                  description: 'optional Время перерыва (12:00-13:00)'
                  example: est
                service_id:
                  type: array
                  description: 'optional Массив IDs сервисов'
                  example:
                    - 19
                  items:
                    type: integer
              required:
                - name
  '/api/v1/queue/{id}':
    get:
      summary: 'Get specified queue'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Queues
      security: []
    put:
      summary: 'Update queue'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Queues
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Название очереди'
                  example: rem
                status:
                  type: integer
                  description: 'optional Статус очереди (1 - активная, 0 - не активная)'
                  example: 10
                is_cron:
                  type: integer
                  description: 'optional Название очереди'
                  example: 15
                slot_duration:
                  type: integer
                  description: 'optional Длительность слота, мин'
                  example: 16
                mon:
                  type: string
                  description: 'optional Время работы в понедельник (08:00-17:00)'
                  example: aut
                tue:
                  type: string
                  description: 'optional Время работы во вторник'
                  example: commodi
                wed:
                  type: string
                  description: 'optional Время работы в среду'
                  example: quis
                thu:
                  type: string
                  description: 'optional Время работы в четверг'
                  example: nostrum
                fri:
                  type: string
                  description: 'optional Время работы в пятницу'
                  example: voluptas
                sat:
                  type: string
                  description: 'optional Время работы в субботу'
                  example: sunt
                sun:
                  type: string
                  description: 'optional Время работы в воскресенье'
                  example: labore
                break:
                  type: string
                  description: 'optional Время перерыва (12:00-13:00)'
                  example: quo
                service_id:
                  type: array
                  description: 'optional Массив IDs сервисов'
                  example:
                    - 1
                  items:
                    type: integer
              required:
                - name
    delete:
      summary: 'Delete specified queue'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Queues
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the queue.'
        example: 16
        required: true
        schema:
          type: integer
  /api/v1/web/queues:
    get:
      summary: 'List of queues'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 15
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 15
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: voluptate
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: voluptate
        -
          in: query
          name: status
          description: 'Статус очереди'
          example: 20
          required: false
          schema:
            type: integer
            description: 'Статус очереди'
            example: 20
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 15
                  data: []
                  first_page_url: 'https://estater.biz/api/v1/web/queues?page=1'
                  from: null
                  last_page: 1
                  last_page_url: 'https://estater.biz/api/v1/web/queues?page=1'
                  links:
                    -
                      url: 'https://estater.biz/api/v1/web/queues?page=14'
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'https://estater.biz/api/v1/web/queues?page=1'
                      label: '1'
                      active: false
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'https://estater.biz/api/v1/web/queues'
                  per_page: 15
                  prev_page_url: 'https://estater.biz/api/v1/web/queues?page=14'
                  to: null
                  total: 1
                properties:
                  current_page:
                    type: integer
                    example: 15
                  data:
                    type: array
                    example: []
                  first_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/queues?page=1'
                  from:
                    type: string
                    example: null
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/queues?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: 'https://estater.biz/api/v1/web/queues?page=14'
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'https://estater.biz/api/v1/web/queues?page=1'
                        label: '1'
                        active: false
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'https://estater.biz/api/v1/web/queues'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/queues?page=14'
                  to:
                    type: string
                    example: null
                  total:
                    type: integer
                    example: 1
      tags:
        - Queues
      security: []
  '/api/v1/web/queue/{id}':
    get:
      summary: 'Get specified queue'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Not found.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Not found.'
      tags:
        - Queues
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the queue.'
        example: 7
        required: true
        schema:
          type: integer
  /api/v1/cabinet/queues:
    get:
      summary: 'List of queues'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 10
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 10
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: est
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: est
        -
          in: query
          name: status
          description: 'Статус очереди'
          example: 12
          required: false
          schema:
            type: integer
            description: 'Статус очереди'
            example: 12
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Queues
      security: []
  '/api/v1/cabinet/queue/{id}':
    get:
      summary: 'Get specified queue'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Queues
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the queue.'
        example: 9
        required: true
        schema:
          type: integer
  /api/v1/law_categories:
    get:
      summary: 'List of law category'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 1
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: dolor
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: dolor
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: voluptatem
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: voluptatem
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden)'
          example: deleniti
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden)'
            example: deleniti
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: doloribus
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: doloribus
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Category of Laws'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: visible
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
      security: []
  /api/v1/law_category:
    post:
      summary: 'Create law category'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Category of Laws'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  description: 'Статус отображения (1-отображается, 0-скрыто)'
                  example: 14
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
                'name:en':
                  type: string
                  description: 'Название на английском'
                  example: quia
                'name:uk':
                  type: string
                  description: 'Название на украинском'
                  example: illo
                parent_id:
                  type: integer
                  description: 'optional ID родительской категории из таблицы law_categories'
                  example: 7
              required:
                - 'name:en'
                - 'name:uk'
  '/api/v1/law_category/{id}':
    get:
      summary: 'Get specified link category'
      description: ''
      parameters:
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: consequuntur
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: consequuntur
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Category of Laws'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: visible
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
      security: []
    put:
      summary: 'Update specified law category'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Category of Laws'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  description: 'Статус отображения (1-отображается, 0-скрыто)'
                  example: 1
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
                'name:en':
                  type: string
                  description: 'optional Название на английском'
                  example: harum
                'name:uk':
                  type: string
                  description: 'optional Название на украинском'
                  example: tempora
                parent_id:
                  type: integer
                  description: 'optional ID родительской категории из тиблици law_categories'
                  example: 16
    delete:
      summary: 'Delete specified law category'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Category of Laws'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the law category.'
        example: explicabo
        required: true
        schema:
          type: string
  /api/v1/web/law_categories:
    get:
      summary: 'List of law category'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 20
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 20
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: repellat
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: repellat
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: et
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: et
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden)'
          example: maxime
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden)'
            example: maxime
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: aliquid
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: aliquid
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 20
                  data: []
                  first_page_url: 'https://estater.biz/api/v1/web/law_categories?page=1'
                  from: null
                  last_page: 1
                  last_page_url: 'https://estater.biz/api/v1/web/law_categories?page=1'
                  links:
                    -
                      url: 'https://estater.biz/api/v1/web/law_categories?page=19'
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'https://estater.biz/api/v1/web/law_categories?page=1'
                      label: '1'
                      active: false
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'https://estater.biz/api/v1/web/law_categories'
                  per_page: 15
                  prev_page_url: 'https://estater.biz/api/v1/web/law_categories?page=19'
                  to: null
                  total: 0
                properties:
                  current_page:
                    type: integer
                    example: 20
                  data:
                    type: array
                    example: []
                  first_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/law_categories?page=1'
                  from:
                    type: string
                    example: null
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/law_categories?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: 'https://estater.biz/api/v1/web/law_categories?page=19'
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'https://estater.biz/api/v1/web/law_categories?page=1'
                        label: '1'
                        active: false
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'https://estater.biz/api/v1/web/law_categories'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/law_categories?page=19'
                  to:
                    type: string
                    example: null
                  total:
                    type: integer
                    example: 0
      tags:
        - 'Category of Laws'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: hidden
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
      security: []
  '/api/v1/web/law_category/{id}':
    get:
      summary: 'Get specified link category'
      description: ''
      parameters:
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: id
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: id
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Ресурс не знайдено.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Ресурс не знайдено.'
      tags:
        - 'Category of Laws'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: visible
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the law category.'
        example: quas
        required: true
        schema:
          type: string
  /api/v1/link_categories:
    get:
      summary: 'List of link category'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 18
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 18
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: sed
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: sed
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: eos
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: eos
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden)'
          example: omnis
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden)'
            example: omnis
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: reprehenderit
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: reprehenderit
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Category of Links'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: visible
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
      security: []
  /api/v1/link_category:
    post:
      summary: 'Create link category'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Category of Links'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  description: 'Статус отображения (1-отображается, 0-скрыто)'
                  example: 12
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
                'name:en':
                  type: string
                  description: 'Название на английском'
                  example: velit
                'name:uk':
                  type: string
                  description: 'Название на украинском'
                  example: porro
                parent_id:
                  type: integer
                  description: 'optional ID родительской категории из тиблици Link_categories'
                  example: 17
              required:
                - 'name:en'
                - 'name:uk'
  '/api/v1/link_category/{id}':
    get:
      summary: 'Get specified link category'
      description: ''
      parameters:
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: non
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: non
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Category of Links'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: visible
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
      security: []
    put:
      summary: 'Update specified link category'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Category of Links'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  description: 'Статус отображения (1-отображается, 0-скрыто)'
                  example: 4
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
                'name:en':
                  type: string
                  description: 'optional Название на английском'
                  example: neque
                'name:uk':
                  type: string
                  description: 'optional Название на украинском'
                  example: rerum
                parent_id:
                  type: integer
                  description: 'optional ID родительской категории из тиблици Link_categories'
                  example: 12
    delete:
      summary: 'Delete specified link category'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Category of Links'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the link category.'
        example: beatae
        required: true
        schema:
          type: string
  /api/v1/web/link_categories:
    get:
      summary: 'List of link category'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 17
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 17
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: recusandae
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: recusandae
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: ex
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: ex
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden)'
          example: et
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden)'
            example: et
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: velit
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: velit
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 17
                  data: []
                  first_page_url: 'https://estater.biz/api/v1/web/link_categories?page=1'
                  from: null
                  last_page: 1
                  last_page_url: 'https://estater.biz/api/v1/web/link_categories?page=1'
                  links:
                    -
                      url: 'https://estater.biz/api/v1/web/link_categories?page=16'
                      label: '&laquo; Назад'
                      active: false
                    -
                      url: 'https://estater.biz/api/v1/web/link_categories?page=1'
                      label: '1'
                      active: false
                    -
                      url: null
                      label: 'Далі &raquo;'
                      active: false
                  next_page_url: null
                  path: 'https://estater.biz/api/v1/web/link_categories'
                  per_page: 15
                  prev_page_url: 'https://estater.biz/api/v1/web/link_categories?page=16'
                  to: null
                  total: 0
                properties:
                  current_page:
                    type: integer
                    example: 17
                  data:
                    type: array
                    example: []
                  first_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/link_categories?page=1'
                  from:
                    type: string
                    example: null
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/link_categories?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: 'https://estater.biz/api/v1/web/link_categories?page=16'
                        label: '&laquo; Назад'
                        active: false
                      -
                        url: 'https://estater.biz/api/v1/web/link_categories?page=1'
                        label: '1'
                        active: false
                      -
                        url: null
                        label: 'Далі &raquo;'
                        active: false
                    items:
                      type: object
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'https://estater.biz/api/v1/web/link_categories'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/link_categories?page=16'
                  to:
                    type: string
                    example: null
                  total:
                    type: integer
                    example: 0
      tags:
        - 'Category of Links'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: visible
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
      security: []
  '/api/v1/web/link_category/{id}':
    get:
      summary: 'Get specified link category'
      description: ''
      parameters:
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: enim
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: enim
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Ресурс не знайдено.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Ресурс не знайдено.'
      tags:
        - 'Category of Links'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: hidden
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the link category.'
        example: eum
        required: true
        schema:
          type: string
  /api/v1/page_categories:
    get:
      summary: 'List of page category'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 3
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 3
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: ex
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: ex
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: assumenda
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: assumenda
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: minus
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: minus
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Category of Pages'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
      security: []
  /api/v1/page_category:
    post:
      summary: 'Create page category'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Category of Pages'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
                'name:en':
                  type: string
                  description: 'Название на английском'
                  example: quia
                'name:uk':
                  type: string
                  description: 'Название на украинском'
                  example: perspiciatis
                parent_id:
                  type: integer
                  description: 'optional ID родительской категории из тиблици Link_categories'
                  example: 1
              required:
                - 'name:en'
                - 'name:uk'
  '/api/v1/page_category/{id}':
    get:
      summary: 'Get specified page category'
      description: ''
      parameters:
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: molestiae
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: molestiae
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Category of Pages'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
      security: []
    put:
      summary: 'Update specified page category'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Category of Pages'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
                'name:en':
                  type: string
                  description: 'optional Название на английском'
                  example: sit
                'name:uk':
                  type: string
                  description: 'optional Название на украинском'
                  example: labore
                parent_id:
                  type: integer
                  description: 'optional ID родительской категории из тиблици Link_categories'
                  example: 1
    delete:
      summary: 'Delete specified page category'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Category of Pages'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the page category.'
        example: doloribus
        required: true
        schema:
          type: string
  /api/v1/web/page_categories:
    get:
      summary: 'List of page category'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 10
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 10
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: sint
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: sint
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: delectus
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: delectus
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: omnis
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: omnis
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 10
                  data: []
                  first_page_url: 'https://estater.biz/api/v1/web/page_categories?page=1'
                  from: null
                  last_page: 1
                  last_page_url: 'https://estater.biz/api/v1/web/page_categories?page=1'
                  links:
                    -
                      url: 'https://estater.biz/api/v1/web/page_categories?page=9'
                      label: '&laquo; Назад'
                      active: false
                    -
                      url: 'https://estater.biz/api/v1/web/page_categories?page=1'
                      label: '1'
                      active: false
                    -
                      url: null
                      label: 'Далі &raquo;'
                      active: false
                  next_page_url: null
                  path: 'https://estater.biz/api/v1/web/page_categories'
                  per_page: 15
                  prev_page_url: 'https://estater.biz/api/v1/web/page_categories?page=9'
                  to: null
                  total: 0
                properties:
                  current_page:
                    type: integer
                    example: 10
                  data:
                    type: array
                    example: []
                  first_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/page_categories?page=1'
                  from:
                    type: string
                    example: null
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/page_categories?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: 'https://estater.biz/api/v1/web/page_categories?page=9'
                        label: '&laquo; Назад'
                        active: false
                      -
                        url: 'https://estater.biz/api/v1/web/page_categories?page=1'
                        label: '1'
                        active: false
                      -
                        url: null
                        label: 'Далі &raquo;'
                        active: false
                    items:
                      type: object
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'https://estater.biz/api/v1/web/page_categories'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/page_categories?page=9'
                  to:
                    type: string
                    example: null
                  total:
                    type: integer
                    example: 0
      tags:
        - 'Category of Pages'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
      security: []
  '/api/v1/web/page_category/{id}':
    get:
      summary: 'Get specified page category'
      description: ''
      parameters:
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: sunt
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: sunt
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Ресурс не знайдено.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Ресурс не знайдено.'
      tags:
        - 'Category of Pages'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the page category.'
        example: blanditiis
        required: true
        schema:
          type: string
  /api/v1/news_categories:
    get:
      summary: 'List of news categories'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи.'
            example: 1
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden). Must be one of <code>visible</code> or <code>hidden</code>.'
          example: visible
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden). Must be one of <code>visible</code> or <code>hidden</code>.'
            example: visible
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en). Must be one of <code>uk</code> or <code>en</code>.'
          example: uk
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en). Must be one of <code>uk</code> or <code>en</code>.'
            example: uk
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: maiores
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: maiores
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: dicta
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: dicta
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Category of news'
      security: []
  /api/v1/news_category:
    post:
      summary: 'Create news category'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи.'
            example: 1
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden). Must be one of <code>visible</code> or <code>hidden</code>.'
          example: hidden
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden). Must be one of <code>visible</code> or <code>hidden</code>.'
            example: hidden
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en). Must be one of <code>uk</code> or <code>en</code>.'
          example: en
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en). Must be one of <code>uk</code> or <code>en</code>.'
            example: en
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Category of news'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                'name:en':
                  type: string
                  description: 'Название на английском'
                  example: sit
                'name:uk':
                  type: string
                  description: 'Название на украинском'
                  example: nemo
                'meta_title:en':
                  type: string
                  description: 'Тег title на английском'
                  example: quibusdam
                'meta_title:uk':
                  type: string
                  description: 'Тег title на украинском'
                  example: ipsam
                'meta_description:en':
                  type: string
                  description: 'Тег description на английском'
                  example: voluptate
                'meta_description:uk':
                  type: string
                  description: 'Тег description на украинском'
                  example: eum
                status:
                  type: integer
                  description: 'Статус отображения (1-отображается, 0-скрыто)'
                  example: 4
              required:
                - 'name:en'
                - 'name:uk'
  '/api/v1/news_category/{id}':
    get:
      summary: 'Get specified news category'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи.'
            example: 1
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden). Must be one of <code>visible</code> or <code>hidden</code>.'
          example: hidden
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden). Must be one of <code>visible</code> or <code>hidden</code>.'
            example: hidden
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: eligendi
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: eligendi
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Category of news'
      security: []
    put:
      summary: 'Update specified news category'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи.'
            example: 1
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden). Must be one of <code>visible</code> or <code>hidden</code>.'
          example: hidden
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden). Must be one of <code>visible</code> or <code>hidden</code>.'
            example: hidden
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en). Must be one of <code>uk</code> or <code>en</code>.'
          example: en
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en). Must be one of <code>uk</code> or <code>en</code>.'
            example: en
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Category of news'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                'name:en':
                  type: string
                  description: 'Название на английском'
                  example: ratione
                'name:uk':
                  type: string
                  description: 'Название на украинском'
                  example: non
                'meta_title:en':
                  type: string
                  description: 'Тег title на английском'
                  example: magnam
                'meta_title:uk':
                  type: string
                  description: 'Тег title на украинском'
                  example: ipsam
                'meta_description:en':
                  type: string
                  description: 'Тег description на английском'
                  example: corporis
                'meta_description:uk':
                  type: string
                  description: 'Тег description на украинском'
                  example: modi
                status:
                  type: integer
                  description: 'Статус отображения (1-отображается, 0-скрыто)'
                  example: 11
    delete:
      summary: 'Delete specified news category'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Category of news'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the news category.'
        example: tempora
        required: true
        schema:
          type: string
  /api/v1/web/news_categories:
    get:
      summary: 'List of news categories'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи.'
            example: 1
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden). Must be one of <code>visible</code> or <code>hidden</code>.'
          example: visible
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden). Must be one of <code>visible</code> or <code>hidden</code>.'
            example: visible
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en). Must be one of <code>uk</code> or <code>en</code>.'
          example: uk
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en). Must be one of <code>uk</code> or <code>en</code>.'
            example: uk
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: et
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: et
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: aperiam
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: aperiam
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data: []
                  first_page_url: 'https://estater.biz/api/v1/web/news_categories?page=1'
                  from: null
                  last_page: 1
                  last_page_url: 'https://estater.biz/api/v1/web/news_categories?page=1'
                  links:
                    -
                      url: null
                      label: '&laquo; Назад'
                      active: false
                    -
                      url: 'https://estater.biz/api/v1/web/news_categories?page=1'
                      label: '1'
                      active: true
                    -
                      url: null
                      label: 'Далі &raquo;'
                      active: false
                  next_page_url: null
                  path: 'https://estater.biz/api/v1/web/news_categories'
                  per_page: 15
                  prev_page_url: null
                  to: null
                  total: 0
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
                  first_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/news_categories?page=1'
                  from:
                    type: string
                    example: null
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/news_categories?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: null
                        label: '&laquo; Назад'
                        active: false
                      -
                        url: 'https://estater.biz/api/v1/web/news_categories?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Далі &raquo;'
                        active: false
                    items:
                      type: object
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'https://estater.biz/api/v1/web/news_categories'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: string
                    example: null
                  total:
                    type: integer
                    example: 0
      tags:
        - 'Category of news'
      security: []
  '/api/v1/web/news_category/{id}':
    get:
      summary: 'Get specified news category'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи.'
            example: 1
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden). Must be one of <code>visible</code> or <code>hidden</code>.'
          example: visible
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden). Must be one of <code>visible</code> or <code>hidden</code>.'
            example: visible
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: molestias
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: molestias
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The given data was invalid.'
                  errors:
                    lang:
                      - 'Вибране для lang значення не коректне.'
                properties:
                  message:
                    type: string
                    example: 'The given data was invalid.'
                  errors:
                    type: object
                    example:
                      lang:
                        - 'Вибране для lang значення не коректне.'
      tags:
        - 'Category of news'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the news category.'
        example: iste
        required: true
        schema:
          type: string
  /api/v1/categories:
    get:
      summary: 'List of categories'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи.'
            example: 1
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden). Must be one of <code>visible</code> or <code>hidden</code>.'
          example: visible
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden). Must be one of <code>visible</code> or <code>hidden</code>.'
            example: visible
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en). Must be one of <code>uk</code> or <code>en</code>.'
          example: en
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en). Must be one of <code>uk</code> or <code>en</code>.'
            example: en
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: voluptatem
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: voluptatem
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: et
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: et
        -
          in: query
          name: sector_id
          description: 'ID сферы услуг'
          example: 14
          required: false
          schema:
            type: integer
            description: 'ID сферы услуг'
            example: 14
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Category of services'
      security: []
  /api/v1/category:
    post:
      summary: 'Create category'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи.'
            example: 1
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden). Must be one of <code>visible</code> or <code>hidden</code>.'
          example: visible
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden). Must be one of <code>visible</code> or <code>hidden</code>.'
            example: visible
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en). Must be one of <code>uk</code> or <code>en</code>.'
          example: en
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en). Must be one of <code>uk</code> or <code>en</code>.'
            example: en
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Category of services'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sector_id:
                  type: integer
                  description: 'ID сферы услуг'
                  example: 6
                'name:en':
                  type: string
                  description: 'Название на английском'
                  example: minus
                'name:uk':
                  type: string
                  description: 'Название на украинском'
                  example: sequi
                'meta_title:en':
                  type: string
                  description: 'Тег title на английском'
                  example: dolor
                'meta_title:uk':
                  type: string
                  description: 'Тег title на украинском'
                  example: tempora
                'meta_description:en':
                  type: string
                  description: 'Тег description на английском'
                  example: est
                'meta_description:uk':
                  type: string
                  description: 'Тег description на украинском'
                  example: qui
                status:
                  type: integer
                  description: 'Статус отображения (1-отображается, 0-скрыто)'
                  example: 8
              required:
                - sector_id
                - 'name:en'
                - 'name:uk'
  '/api/v1/category/{id}':
    get:
      summary: 'Get specified category'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи.'
            example: 1
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden). Must be one of <code>visible</code> or <code>hidden</code>.'
          example: visible
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden). Must be one of <code>visible</code> or <code>hidden</code>.'
            example: visible
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: perspiciatis
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: perspiciatis
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Category of services'
      security: []
    put:
      summary: 'Update specified category'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи.'
            example: 1
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden). Must be one of <code>visible</code> or <code>hidden</code>.'
          example: hidden
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden). Must be one of <code>visible</code> or <code>hidden</code>.'
            example: hidden
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en). Must be one of <code>uk</code> or <code>en</code>.'
          example: en
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en). Must be one of <code>uk</code> or <code>en</code>.'
            example: en
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Category of services'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                sector_id:
                  type: integer
                  description: 'ID сферы услуг'
                  example: 11
                'name:en':
                  type: string
                  description: 'Название на английском'
                  example: quae
                'name:uk':
                  type: string
                  description: 'Название на украинском'
                  example: est
                'meta_title:en':
                  type: string
                  description: 'Тег title на английском'
                  example: dolorum
                'meta_title:uk':
                  type: string
                  description: 'Тег title на украинском'
                  example: dolore
                'meta_description:en':
                  type: string
                  description: 'Тег description на английском'
                  example: voluptatem
                'meta_description:uk':
                  type: string
                  description: 'Тег description на украинском'
                  example: provident
                status:
                  type: integer
                  description: 'Статус отображения (1-отображается, 0-скрыто)'
                  example: 5
    delete:
      summary: 'Delete specified category'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Category of services'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the category.'
        example: 11
        required: true
        schema:
          type: integer
  /api/v1/web/categories:
    get:
      summary: 'List of categories'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи.'
            example: 1
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden). Must be one of <code>visible</code> or <code>hidden</code>.'
          example: visible
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden). Must be one of <code>visible</code> or <code>hidden</code>.'
            example: visible
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en). Must be one of <code>uk</code> or <code>en</code>.'
          example: uk
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en). Must be one of <code>uk</code> or <code>en</code>.'
            example: uk
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: quis
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: quis
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: quia
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: quia
        -
          in: query
          name: sector_id
          description: 'ID сферы услуг'
          example: 17
          required: false
          schema:
            type: integer
            description: 'ID сферы услуг'
            example: 17
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data: []
                  first_page_url: 'https://estater.biz/api/v1/web/categories?page=1'
                  from: null
                  last_page: 1
                  last_page_url: 'https://estater.biz/api/v1/web/categories?page=1'
                  links:
                    -
                      url: null
                      label: '&laquo; Назад'
                      active: false
                    -
                      url: 'https://estater.biz/api/v1/web/categories?page=1'
                      label: '1'
                      active: true
                    -
                      url: null
                      label: 'Далі &raquo;'
                      active: false
                  next_page_url: null
                  path: 'https://estater.biz/api/v1/web/categories'
                  per_page: 15
                  prev_page_url: null
                  to: null
                  total: 0
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
                  first_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/categories?page=1'
                  from:
                    type: string
                    example: null
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/categories?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: null
                        label: '&laquo; Назад'
                        active: false
                      -
                        url: 'https://estater.biz/api/v1/web/categories?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Далі &raquo;'
                        active: false
                    items:
                      type: object
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'https://estater.biz/api/v1/web/categories'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: string
                    example: null
                  total:
                    type: integer
                    example: 0
      tags:
        - 'Category of services'
      security: []
  '/api/v1/web/category/{id}':
    get:
      summary: 'Get specified category'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи.'
            example: 1
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden). Must be one of <code>visible</code> or <code>hidden</code>.'
          example: hidden
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden). Must be one of <code>visible</code> or <code>hidden</code>.'
            example: hidden
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: excepturi
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: excepturi
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The given data was invalid.'
                  errors:
                    lang:
                      - 'Вибране для lang значення не коректне.'
                properties:
                  message:
                    type: string
                    example: 'The given data was invalid.'
                  errors:
                    type: object
                    example:
                      lang:
                        - 'Вибране для lang значення не коректне.'
      tags:
        - 'Category of services'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the category.'
        example: 16
        required: true
        schema:
          type: integer
  /api/v1/entries:
    get:
      summary: 'List of entries'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: dignissimos
          required: false
          schema:
            type: string
            description: 'Номер страницы с результатами выдачи'
            example: dignissimos
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id\|desc'''
          example: impedit
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id\|desc'''
            example: impedit
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: omnis
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: omnis
        -
          in: query
          name: service_id
          description: 'ID сервиса'
          example: harum
          required: false
          schema:
            type: string
            description: 'ID сервиса'
            example: harum
        -
          in: query
          name: user_id
          description: 'ID пользователя'
          example: temporibus
          required: false
          schema:
            type: string
            description: 'ID пользователя'
            example: temporibus
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Entries
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>new</code>, <code>active</code>, <code>finished</code>, or <code>refused</code>.'
                  example: active
      security: []
  /api/v1/entry:
    post:
      summary: 'Create an entry'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Entries
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: optional
                  description: 'string (active,finished,refused)'
                  example: et
                user_id:
                  type: required
                  description: 'ID устройсва'
                  example: inventore
                service_id:
                  type: required
                  description: 'ID категории'
                  example: non
                text:
                  type: required
                  description: 'string Описание, текст заявки'
                  example: neque
                phone:
                  type: required
                  description: 'string Контактный телефон'
                  example: ut
                file:
                  type: array
                  description: 'optional Документы к заявке(если есть)'
                  example:
                    - quidem
                  items:
                    type: ''
      security: []
  '/api/v1/entry/{id}':
    get:
      summary: 'Get specified entry'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Entries
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>new</code>, <code>active</code>, <code>finished</code>, or <code>refused</code>.'
                  example: refused
      security: []
    put:
      summary: 'Update specified entry'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Entries
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: optional
                  description: 'string (active,finished,refused)'
                  example: quis
                user_id:
                  type: optional
                  description: 'ID устройсва'
                  example: nihil
                service_id:
                  type: optional
                  description: 'ID категории'
                  example: consequatur
                text:
                  type: optional
                  description: 'string Описание, текст заявки'
                  example: cumque
                phone:
                  type: optional
                  description: 'string Контактный телефон'
                  example: doloremque
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the entry.'
        example: 18
        required: true
        schema:
          type: integer
  /api/v1/cabinet/entries:
    get:
      summary: 'List of entries'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: blanditiis
          required: false
          schema:
            type: string
            description: 'Номер страницы с результатами выдачи'
            example: blanditiis
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id\|desc'''
          example: sint
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id\|desc'''
            example: sint
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: fuga
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: fuga
        -
          in: query
          name: service_id
          description: 'ID сервиса'
          example: ipsam
          required: false
          schema:
            type: string
            description: 'ID сервиса'
            example: ipsam
        -
          in: query
          name: user_id
          description: 'ID пользователя'
          example: earum
          required: false
          schema:
            type: string
            description: 'ID пользователя'
            example: earum
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Entries
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>new</code>, <code>active</code>, <code>finished</code>, or <code>refused</code>.'
                  example: active
      security: []
  /api/v1/cabinet/entry:
    post:
      summary: 'Create an entry'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Entries
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: optional
                  description: 'string (active,finished,refused)'
                  example: laborum
                user_id:
                  type: required
                  description: 'ID устройсва'
                  example: dolorem
                service_id:
                  type: required
                  description: 'ID категории'
                  example: temporibus
                text:
                  type: required
                  description: 'string Описание, текст заявки'
                  example: libero
                phone:
                  type: required
                  description: 'string Контактный телефон'
                  example: amet
                file:
                  type: array
                  description: 'optional Документы к заявке(если есть)'
                  example:
                    - omnis
                  items:
                    type: ''
      security: []
  '/api/v1/cabinet/entry/{id}':
    get:
      summary: 'Get specified entry'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Entries
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>new</code>, <code>active</code>, <code>finished</code>, or <code>refused</code>.'
                  example: refused
      security: []
    put:
      summary: 'Update specified entry'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Entries
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: optional
                  description: 'string (active,finished,refused)'
                  example: ea
                user_id:
                  type: optional
                  description: 'ID устройсва'
                  example: minus
                service_id:
                  type: optional
                  description: 'ID категории'
                  example: dolores
                text:
                  type: optional
                  description: 'string Описание, текст заявки'
                  example: fugit
                phone:
                  type: optional
                  description: 'string Контактный телефон'
                  example: eum
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the entry.'
        example: 3
        required: true
        schema:
          type: integer
  /api/v1/entry_reviews:
    get:
      summary: 'List of entry reviews'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: excepturi
          required: false
          schema:
            type: string
            description: 'Номер страницы с результатами выдачи'
            example: excepturi
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id\|desc'''
          example: odio
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id\|desc'''
            example: odio
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: aut
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: aut
        -
          in: query
          name: entry_id
          description: 'ID заявки'
          example: dolorem
          required: false
          schema:
            type: string
            description: 'ID заявки'
            example: dolorem
        -
          in: query
          name: user_id
          description: 'ID пользователя'
          example: ipsum
          required: false
          schema:
            type: string
            description: 'ID пользователя'
            example: ipsum
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Entry Reviews'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: hidden
      security: []
  /api/v1/entry_review:
    post:
      summary: 'Create an entry review'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Entry Reviews'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: visible
                entry_id:
                  type: number
                  description: 'ID заяки'
                  example: 4910.8310485
                user_id:
                  type: number
                  description: 'ID пользователя'
                  example: 5481.268
                text:
                  type: string
                  description: 'Описание, текст заявки'
                  example: id
              required:
                - entry_id
                - user_id
                - text
      security: []
  '/api/v1/entry_review/{id}':
    get:
      summary: 'Get specified entry review'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Entry Reviews'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: visible
      security: []
    put:
      summary: 'Update specified entry review'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Entry Reviews'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: hidden
                entry_id:
                  type: number
                  description: 'ID заяки'
                  example: 4006239.1261
                user_id:
                  type: number
                  description: 'ID пользователя'
                  example: 669.339383
                text:
                  type: string
                  description: 'Описание, текст заявки'
                  example: nihil
              required:
                - entry_id
                - user_id
                - text
      security: []
    delete:
      summary: 'Delete specified entry review'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Entry Reviews'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the entry review.'
        example: aliquam
        required: true
        schema:
          type: string
  /api/v1/cabinet/entry_reviews:
    get:
      summary: 'List of entry reviews'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: non
          required: false
          schema:
            type: string
            description: 'Номер страницы с результатами выдачи'
            example: non
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id\|desc'''
          example: quis
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id\|desc'''
            example: quis
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: sed
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: sed
        -
          in: query
          name: entry_id
          description: 'ID заявки'
          example: suscipit
          required: false
          schema:
            type: string
            description: 'ID заявки'
            example: suscipit
        -
          in: query
          name: user_id
          description: 'ID пользователя'
          example: aliquam
          required: false
          schema:
            type: string
            description: 'ID пользователя'
            example: aliquam
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Entry Reviews'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: visible
      security: []
  /api/v1/cabinet/entry_review:
    post:
      summary: 'Create an entry review'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Entry Reviews'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: visible
                entry_id:
                  type: number
                  description: 'ID заяки'
                  example: 1770132.1292905
                user_id:
                  type: number
                  description: 'ID пользователя'
                  example: 1077.768143
                text:
                  type: string
                  description: 'Описание, текст заявки'
                  example: doloribus
              required:
                - entry_id
                - user_id
                - text
      security: []
  '/api/v1/cabinet/entry_review/{id}':
    get:
      summary: 'Get specified entry review'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Entry Reviews'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: hidden
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the entry review.'
        example: id
        required: true
        schema:
          type: string
  /api/v1/feedbacks:
    get:
      summary: 'List of feedbacks'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: ut
          required: false
          schema:
            type: string
            description: 'Номер страницы с результатами выдачи'
            example: ut
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id\|desc'''
          example: vero
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id\|desc'''
            example: vero
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: provident
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: provident
        -
          in: query
          name: user_id
          description: 'ID пользователя'
          example: perferendis
          required: false
          schema:
            type: string
            description: 'ID пользователя'
            example: perferendis
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Feedbacks
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>1</code>, <code>2</code>, or <code>3</code>.'
                  example: '3'
      security: []
  '/api/v1/feedback/{id}':
    get:
      summary: 'Get specified feedback'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Feedbacks
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>1</code>, <code>2</code>, or <code>3</code>.'
                  example: '3'
      security: []
    put:
      summary: 'Update specified feedback'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Feedbacks
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: required
                  description: 'int (1 - очікує відповіді,2 - дана відповідь,3 - відхилено)'
                  example: id
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feedback.'
        example: veniam
        required: true
        schema:
          type: string
  /api/v1/web/feedbacks:
    get:
      summary: 'List of feedbacks'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: expedita
          required: false
          schema:
            type: string
            description: 'Номер страницы с результатами выдачи'
            example: expedita
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id\|desc'''
          example: natus
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id\|desc'''
            example: natus
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: et
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: et
        -
          in: query
          name: user_id
          description: 'ID пользователя'
          example: quo
          required: false
          schema:
            type: string
            description: 'ID пользователя'
            example: quo
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  stat:
                    today: 0
                    yesterday: 0
                    week: 0
                    month: 0
                    year: 0
                  stat_website:
                    today: 0
                    yesterday: 0
                    week: 0
                    month: 0
                    year: 0
                    all: 0
                  stat_impression:
                    today: 0
                    yesterday: 0
                    week: 0
                    month: 0
                    year: 0
                    all: 0
                  current_page: 1
                  data: []
                  first_page_url: 'https://estater.biz/api/v1/web/feedbacks?page=1'
                  from: null
                  last_page: 1
                  last_page_url: 'https://estater.biz/api/v1/web/feedbacks?page=1'
                  links:
                    -
                      url: null
                      label: '&laquo; Назад'
                      active: false
                    -
                      url: 'https://estater.biz/api/v1/web/feedbacks?page=1'
                      label: '1'
                      active: true
                    -
                      url: null
                      label: 'Далі &raquo;'
                      active: false
                  next_page_url: null
                  path: 'https://estater.biz/api/v1/web/feedbacks'
                  per_page: 15
                  prev_page_url: null
                  to: null
                  total: 0
                properties:
                  stat:
                    type: object
                    example:
                      today: 0
                      yesterday: 0
                      week: 0
                      month: 0
                      year: 0
                  stat_website:
                    type: object
                    example:
                      today: 0
                      yesterday: 0
                      week: 0
                      month: 0
                      year: 0
                      all: 0
                  stat_impression:
                    type: object
                    example:
                      today: 0
                      yesterday: 0
                      week: 0
                      month: 0
                      year: 0
                      all: 0
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example: []
                  first_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/feedbacks?page=1'
                  from:
                    type: string
                    example: null
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/feedbacks?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: null
                        label: '&laquo; Назад'
                        active: false
                      -
                        url: 'https://estater.biz/api/v1/web/feedbacks?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Далі &raquo;'
                        active: false
                    items:
                      type: object
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'https://estater.biz/api/v1/web/feedbacks'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: string
                    example: null
                  total:
                    type: integer
                    example: 0
      tags:
        - Feedbacks
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>1</code>, <code>2</code>, or <code>3</code>.'
                  example: '2'
      security: []
  /api/v1/web/feedback:
    post:
      summary: 'Create feedback'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Feedbacks
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>1</code>, <code>2</code>, or <code>3</code>.'
                  example: '1'
                name:
                  type: optional
                  description: 'string Имя'
                  example: similique
                email:
                  type: optional
                  description: 'string Email адрес'
                  example: totam
                text:
                  type: optional
                  description: 'string Описание, текст заявки'
                  example: non
                date:
                  type: required
                  description: 'string Дата обращения'
                  example: nesciunt
                sex:
                  type: required
                  description: 'string Пол (male, female)'
                  example: praesentium
                age:
                  type: required
                  description: 'int Возраст'
                  example: quam
                service_id:
                  type: optional
                  description: 'int ID услуги'
                  example: sit
                is_satisfied:
                  type: required
                  description: 'int Удовлетворенность работой ЦНАП (1, 2)'
                  example: est
                reception_friendly:
                  type: required
                  description: 'int Ресепшн, приветливость (1, 2, 3, 4, 5)'
                  example: voluptates
                reception_competent:
                  type: required
                  description: 'int Ресепшн, компетентность (1, 2, 3, 4, 5)'
                  example: laborum
                center_friendly:
                  type: required
                  description: 'int Специалист, приветливость (1, 2, 3, 4, 5)'
                  example: molestiae
                center_competent:
                  type: required
                  description: 'int Специалист, компетентность (1, 2, 3, 4, 5)'
                  example: quia
                website:
                  type: required
                  description: 'int Оценка веб-сайта (1, 2, 3, 4, 5)'
                  example: enim
                impression:
                  type: required
                  description: 'int Общее впечатление (1, 2, 3, 4, 5)'
                  example: blanditiis
      security: []
  '/api/v1/web/feedback/{id}':
    get:
      summary: 'Get specified feedback'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Not found.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Not found.'
      tags:
        - Feedbacks
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>1</code>, <code>2</code>, or <code>3</code>.'
                  example: '2'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feedback.'
        example: 6
        required: true
        schema:
          type: integer
  /api/v1/institutions:
    get:
      summary: 'List of institutions'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 10
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 10
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: expedita
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: expedita
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: et
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: et
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden)'
          example: magni
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden)'
            example: magni
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: ex
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: ex
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Institutions of services'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: visible
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
      security: []
  /api/v1/institution:
    post:
      summary: 'Create institution'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Institutions of services'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  description: 'optional Статус отображения (1-отображается, 0-скрыто)'
                  example: 14
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
                'name:en':
                  type: string
                  description: 'Название на английском'
                  example: qui
                'name:uk':
                  type: string
                  description: 'Название на украинском'
                  example: nemo
                'meta_title:en':
                  type: string
                  description: 'optional Тег title на английском'
                  example: magni
                'meta_title:uk':
                  type: string
                  description: 'optional Тег title на украинском'
                  example: eaque
                'meta_description:en':
                  type: string
                  description: 'optional Тег description на английском'
                  example: ut
                'meta_description:uk':
                  type: string
                  description: 'optional Тег description на украинском'
                  example: asperiores
                'address:en':
                  type: string
                  description: 'optional Адрес на английском'
                  example: at
                'address:uk':
                  type: string
                  description: 'optional Адрес на украинском'
                  example: accusantium
                'schedule:en':
                  type: string
                  description: 'optional График работы на английском'
                  example: ullam
                'schedule:uk':
                  type: string
                  description: 'optional График работы на украинском'
                  example: quia
                website:
                  type: string
                  description: 'optional URL вебсайта'
                  example: consequuntur
                emails:
                  type: array
                  description: 'optional Массив имейлов'
                  example:
                    - dolore
                  items:
                    type: string
                phones:
                  type: array
                  description: 'optional Массив телефонов'
                  example:
                    - iste
                  items:
                    type: string
              required:
                - 'name:en'
                - 'name:uk'
  '/api/v1/institution/{id}':
    get:
      summary: 'Get specified institution'
      description: ''
      parameters:
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: ut
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: ut
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Institutions of services'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: visible
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
      security: []
    put:
      summary: 'Update specified institution'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Institutions of services'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  description: 'Статус отображения (1-отображается, 0-скрыто)'
                  example: 5
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
                'name:en':
                  type: string
                  description: 'Название на английском'
                  example: et
                'name:uk':
                  type: string
                  description: 'Название на украинском'
                  example: est
                'meta_title:en':
                  type: string
                  description: 'Тег title на английском'
                  example: cumque
                'meta_title:uk':
                  type: string
                  description: 'Тег title на украинском'
                  example: quo
                'meta_description:en':
                  type: string
                  description: 'Тег description на английском'
                  example: in
                'meta_description:uk':
                  type: string
                  description: 'Тег description на украинском'
                  example: ut
                'address:en':
                  type: string
                  description: 'optional Адрес на английском'
                  example: adipisci
                'address:uk':
                  type: string
                  description: 'optional Адрес на украинском'
                  example: omnis
                'schedule:en':
                  type: string
                  description: 'optional График работы на английском'
                  example: saepe
                'schedule:uk':
                  type: string
                  description: 'optional График работы на украинском'
                  example: cupiditate
                website:
                  type: string
                  description: 'optional URL вебсайта'
                  example: occaecati
                emails:
                  type: array
                  description: 'optional Массив имейлов'
                  example:
                    - exercitationem
                  items:
                    type: string
                phones:
                  type: array
                  description: 'optional Массив телефонов'
                  example:
                    - expedita
                  items:
                    type: string
              required:
                - 'name:en'
                - 'name:uk'
    delete:
      summary: 'Delete specified institution'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Institutions of services'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the institution.'
        example: 8
        required: true
        schema:
          type: integer
  /api/v1/web/institutions:
    get:
      summary: 'List of institutions'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 7
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 7
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: dolor
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: dolor
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: ex
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: ex
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden)'
          example: natus
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden)'
            example: natus
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: quisquam
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: quisquam
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 7
                  data: []
                  first_page_url: 'https://estater.biz/api/v1/web/institutions?page=1'
                  from: null
                  last_page: 1
                  last_page_url: 'https://estater.biz/api/v1/web/institutions?page=1'
                  links:
                    -
                      url: 'https://estater.biz/api/v1/web/institutions?page=6'
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'https://estater.biz/api/v1/web/institutions?page=1'
                      label: '1'
                      active: false
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'https://estater.biz/api/v1/web/institutions'
                  per_page: 15
                  prev_page_url: 'https://estater.biz/api/v1/web/institutions?page=6'
                  to: null
                  total: 0
                properties:
                  current_page:
                    type: integer
                    example: 7
                  data:
                    type: array
                    example: []
                  first_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/institutions?page=1'
                  from:
                    type: string
                    example: null
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/institutions?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: 'https://estater.biz/api/v1/web/institutions?page=6'
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'https://estater.biz/api/v1/web/institutions?page=1'
                        label: '1'
                        active: false
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'https://estater.biz/api/v1/web/institutions'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/institutions?page=6'
                  to:
                    type: string
                    example: null
                  total:
                    type: integer
                    example: 0
      tags:
        - 'Institutions of services'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: visible
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
      security: []
  '/api/v1/web/institution/{uri}':
    get:
      summary: 'Get specified institution'
      description: ''
      parameters:
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: deleniti
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: deleniti
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Not found.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Not found.'
      tags:
        - 'Institutions of services'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: visible
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
      security: []
    parameters:
      -
        in: path
        name: uri
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/laws:
    get:
      summary: 'List of laws'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 20
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 20
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: voluptatem
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: voluptatem
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: eaque
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: eaque
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden)'
          example: quos
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden)'
            example: quos
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: itaque
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: itaque
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Laws
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: hidden
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
      security: []
  /api/v1/law:
    post:
      summary: 'Create law'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Laws
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  description: 'Статус отображения (1-отображается, 0-скрыто)'
                  example: 8
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
                'name:en':
                  type: string
                  description: 'Название на английском'
                  example: voluptas
                'name:uk':
                  type: string
                  description: 'Название на украинском'
                  example: totam
                law:
                  type: url
                  description: Ссылка
                  example: nisi
                category_id:
                  type: integer
                  description: 'ID Категории закона'
                  example: 5
                follow:
                  type: integer
                  description: 'Статус отслеживания (1-да, 0-нет)'
                  example: 11
              required:
                - 'name:en'
                - 'name:uk'
                - law
                - category_id
  '/api/v1/law/{id}':
    get:
      summary: 'Get specified link'
      description: ''
      parameters:
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: saepe
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: saepe
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Laws
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: hidden
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
      security: []
    put:
      summary: 'Update specified law category'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Laws
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  description: 'Статус отображения (1-отображается, 0-скрыто)'
                  example: 6
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
                'name:en':
                  type: string
                  description: 'Название на английском'
                  example: placeat
                'name:uk':
                  type: string
                  description: 'Название на украинском'
                  example: accusamus
                link:
                  type: url
                  description: Ссылка
                  example: consequuntur
                category_id:
                  type: integer
                  description: 'ID Категории закона'
                  example: 11
                follow:
                  type: integer
                  description: 'Статус отслеживания (1-да, 0-нет)'
                  example: 6
              required:
                - 'name:en'
                - 'name:uk'
                - link
                - category_id
    delete:
      summary: 'Delete specified law category'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Laws
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the law.'
        example: 15
        required: true
        schema:
          type: integer
  /api/v1/web/laws:
    get:
      summary: 'List of laws'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 17
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 17
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: vel
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: vel
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: earum
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: earum
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden)'
          example: quidem
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden)'
            example: quidem
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: temporibus
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: temporibus
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 17
                  data: []
                  first_page_url: 'https://estater.biz/api/v1/web/laws?page=1'
                  from: null
                  last_page: 1
                  last_page_url: 'https://estater.biz/api/v1/web/laws?page=1'
                  links:
                    -
                      url: 'https://estater.biz/api/v1/web/laws?page=16'
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'https://estater.biz/api/v1/web/laws?page=1'
                      label: '1'
                      active: false
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'https://estater.biz/api/v1/web/laws'
                  per_page: 15
                  prev_page_url: 'https://estater.biz/api/v1/web/laws?page=16'
                  to: null
                  total: 0
                properties:
                  current_page:
                    type: integer
                    example: 17
                  data:
                    type: array
                    example: []
                  first_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/laws?page=1'
                  from:
                    type: string
                    example: null
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/laws?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: 'https://estater.biz/api/v1/web/laws?page=16'
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'https://estater.biz/api/v1/web/laws?page=1'
                        label: '1'
                        active: false
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'https://estater.biz/api/v1/web/laws'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/laws?page=16'
                  to:
                    type: string
                    example: null
                  total:
                    type: integer
                    example: 0
      tags:
        - Laws
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: visible
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
      security: []
  '/api/v1/web/law/{id}':
    get:
      summary: 'Get specified link'
      description: ''
      parameters:
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: fuga
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: fuga
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Ресурс не знайдено.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Ресурс не знайдено.'
      tags:
        - Laws
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: visible
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the law.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/links:
    get:
      summary: 'List of link'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 18
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 18
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: architecto
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: architecto
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: molestiae
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: molestiae
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden)'
          example: iste
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden)'
            example: iste
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: totam
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: totam
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Links
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: visible
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
      security: []
  /api/v1/link:
    post:
      summary: 'Create link'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Links
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  description: 'Статус отображения (1-отображается, 0-скрыто)'
                  example: 20
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
                'name:en':
                  type: string
                  description: 'Название на английском'
                  example: iure
                'name:uk':
                  type: string
                  description: 'Название на украинском'
                  example: dolore
                link:
                  type: url
                  description: Ссылка
                  example: hic
                category_id:
                  type: integer
                  description: 'ID Категории ссылки'
                  example: 10
                follow:
                  type: integer
                  description: 'Статус отслеживания (1-да, 0-нет)'
                  example: 4
              required:
                - 'name:en'
                - 'name:uk'
                - link
                - category_id
  '/api/v1/link/{id}':
    get:
      summary: 'Get specified link'
      description: ''
      parameters:
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: eum
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: eum
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Links
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: hidden
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
      security: []
    put:
      summary: 'Update specified link category'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Links
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  description: 'Статус отображения (1-отображается, 0-скрыто)'
                  example: 1
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
                'name:en':
                  type: string
                  description: 'Название на английском'
                  example: incidunt
                'name:uk':
                  type: string
                  description: 'Название на украинском'
                  example: in
                link:
                  type: url
                  description: Ссылка
                  example: qui
                category_id:
                  type: integer
                  description: 'ID Категории ссылки'
                  example: 5
                follow:
                  type: integer
                  description: 'Статус отслеживания (1-да, 0-нет)'
                  example: 3
              required:
                - 'name:en'
                - 'name:uk'
                - link
                - category_id
    delete:
      summary: 'Delete specified link category'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Links
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the link.'
        example: 20
        required: true
        schema:
          type: integer
  /api/v1/web/links:
    get:
      summary: 'List of link'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 7
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 7
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: aut
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: aut
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: qui
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: qui
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden)'
          example: eos
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden)'
            example: eos
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: quia
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: quia
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 7
                  data: []
                  first_page_url: 'https://estater.biz/api/v1/web/links?page=1'
                  from: null
                  last_page: 1
                  last_page_url: 'https://estater.biz/api/v1/web/links?page=1'
                  links:
                    -
                      url: 'https://estater.biz/api/v1/web/links?page=6'
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'https://estater.biz/api/v1/web/links?page=1'
                      label: '1'
                      active: false
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'https://estater.biz/api/v1/web/links'
                  per_page: 15
                  prev_page_url: 'https://estater.biz/api/v1/web/links?page=6'
                  to: null
                  total: 0
                properties:
                  current_page:
                    type: integer
                    example: 7
                  data:
                    type: array
                    example: []
                  first_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/links?page=1'
                  from:
                    type: string
                    example: null
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/links?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: 'https://estater.biz/api/v1/web/links?page=6'
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'https://estater.biz/api/v1/web/links?page=1'
                        label: '1'
                        active: false
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'https://estater.biz/api/v1/web/links'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/links?page=6'
                  to:
                    type: string
                    example: null
                  total:
                    type: integer
                    example: 0
      tags:
        - Links
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: hidden
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
      security: []
  '/api/v1/web/link/{id}':
    get:
      summary: 'Get specified link'
      description: ''
      parameters:
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: modi
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: modi
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Ресурс не знайдено.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Ресурс не знайдено.'
      tags:
        - Links
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: visible
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the link.'
        example: 7
        required: true
        schema:
          type: integer
  /api/v1/modules:
    get:
      summary: 'List of modules'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Modules
  /api/v1/news:
    get:
      summary: 'List of news'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 7
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 7
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: qui
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: qui
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: quo
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: quo
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden)'
          example: aliquam
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden)'
            example: aliquam
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: labore
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: labore
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - News
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: hidden
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
      security: []
    post:
      summary: 'Create news'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - News
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  description: 'Статус отображения (1-отображается, 0-скрыто)'
                  example: 18
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
                'name:en':
                  type: string
                  description: 'Название на английском'
                  example: ut
                'name:uk':
                  type: string
                  description: 'Название на украинском'
                  example: vero
                'text:en':
                  type: string
                  description: 'Текст новости на английском'
                  example: reprehenderit
                'text:uk':
                  type: string
                  description: 'Текст новости на украинском'
                  example: accusamus
                'meta_title:en':
                  type: string
                  description: 'Тег title на английском'
                  example: ipsam
                'meta_title:uk':
                  type: string
                  description: 'Тег title на украинском'
                  example: et
                'meta_description:en':
                  type: string
                  description: 'Тег description на английском'
                  example: hic
                'meta_description:uk':
                  type: string
                  description: 'Тег description на украинском'
                  example: consequatur
                is_pinned:
                  type: integer
                  description: 'Закрепить нвоость на главной (1-новость закреплена)'
                  example: 3
                image:
                  type: string
                  description: 'Картинка в base64'
                  example: qui
                tag_id:
                  type: array
                  description: 'Массив IDs тегов optional'
                  example:
                    - 14
                  items:
                    type: integer
              required:
                - 'name:en'
                - 'name:uk'
  '/api/v1/news/{id}':
    get:
      summary: 'Get specified news'
      description: ''
      parameters:
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: dolor
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: dolor
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - News
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: visible
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
      security: []
    put:
      summary: 'Update specified news'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - News
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  description: 'Статус отображения (1-отображается, 0-скрыто)'
                  example: 13
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
                'name:en':
                  type: string
                  description: 'Название на английском'
                  example: blanditiis
                'name:uk':
                  type: string
                  description: 'Название на украинском'
                  example: harum
                'text:en':
                  type: string
                  description: 'Текст новости на английском'
                  example: corporis
                'text:uk':
                  type: string
                  description: 'Текст новости на украинском'
                  example: magnam
                'meta_title:en':
                  type: string
                  description: 'Тег title на английском'
                  example: veniam
                'meta_title:uk':
                  type: string
                  description: 'Тег title на украинском'
                  example: ratione
                'meta_description:en':
                  type: string
                  description: 'Тег description на английском'
                  example: ea
                'meta_description:uk':
                  type: string
                  description: 'Тег description на украинском'
                  example: sed
                is_pinned:
                  type: integer
                  description: 'Закрепить новость на главной (1-новость закреплена)'
                  example: 20
                image:
                  type: string
                  description: 'Картинка в base64'
                  example: est
                tag_id:
                  type: array
                  description: 'Массив IDs тегов optional'
                  example:
                    - 11
                  items:
                    type: integer
              required:
                - 'name:en'
                - 'name:uk'
    delete:
      summary: 'Delete specified news'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - News
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the news.'
        example: 20
        required: true
        schema:
          type: integer
  /api/v1/web/news:
    get:
      summary: 'List of news'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 13
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 13
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: possimus
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: possimus
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: repellendus
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: repellendus
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden)'
          example: saepe
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden)'
            example: saepe
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: ut
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: ut
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 13
                  data: []
                  first_page_url: 'https://estater.biz/api/v1/web/news?page=1'
                  from: null
                  last_page: 1
                  last_page_url: 'https://estater.biz/api/v1/web/news?page=1'
                  links:
                    -
                      url: 'https://estater.biz/api/v1/web/news?page=12'
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'https://estater.biz/api/v1/web/news?page=1'
                      label: '1'
                      active: false
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'https://estater.biz/api/v1/web/news'
                  per_page: 15
                  prev_page_url: 'https://estater.biz/api/v1/web/news?page=12'
                  to: null
                  total: 0
                properties:
                  current_page:
                    type: integer
                    example: 13
                  data:
                    type: array
                    example: []
                  first_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/news?page=1'
                  from:
                    type: string
                    example: null
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/news?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: 'https://estater.biz/api/v1/web/news?page=12'
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'https://estater.biz/api/v1/web/news?page=1'
                        label: '1'
                        active: false
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'https://estater.biz/api/v1/web/news'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/news?page=12'
                  to:
                    type: string
                    example: null
                  total:
                    type: integer
                    example: 0
      tags:
        - News
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: visible
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
      security: []
  '/api/v1/web/news/{uri}':
    get:
      summary: 'Get specified news'
      description: ''
      parameters:
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: totam
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: totam
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Not found.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Not found.'
      tags:
        - News
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: visible
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
      security: []
    parameters:
      -
        in: path
        name: uri
        description: ''
        example: 10
        required: true
        schema:
          type: integer
  '/api/v1/web/news/preview/{id}':
    get:
      summary: 'Get specified news'
      description: ''
      parameters:
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: voluptatum
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: voluptatum
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Not found.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Not found.'
      tags:
        - News
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: visible
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the preview.'
        example: et
        required: true
        schema:
          type: string
  /api/v1/file:
    post:
      summary: 'Create  file'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Other
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                entry_id:
                  type: required
                  description: 'ID заявки'
                  example: sint
                files:
                  type: array
                  description: 'Документы к заявке'
                  example:
                    - qui
                  items:
                    type: ''
              required:
                - files
      security: []
  /api/v1/cabinet/file:
    post:
      summary: 'Create  file'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Other
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                entry_id:
                  type: required
                  description: 'ID заявки'
                  example: quam
                files:
                  type: array
                  description: 'Документы к заявке'
                  example:
                    - totam
                  items:
                    type: ''
              required:
                - files
      security: []
  /api/v1/pages:
    get:
      summary: 'List of page'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 11
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 11
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: ullam
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: ullam
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: quo
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: quo
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: praesentium
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: praesentium
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Pages
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
      security: []
  /api/v1/page:
    post:
      summary: 'Create page'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Pages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
                'name:en':
                  type: string
                  description: 'Название на английском'
                  example: minus
                'name:uk':
                  type: string
                  description: 'Название на украинском'
                  example: voluptates
                'text:en':
                  type: string
                  description: 'Текст новости на английском'
                  example: velit
                'text:uk':
                  type: string
                  description: 'Текст новости на украинском'
                  example: inventore
                category_id:
                  type: integer
                  description: 'ID Категории страниц'
                  example: 4
                'meta_title:en':
                  type: string
                  description: 'Тег title на английском'
                  example: possimus
                'meta_title:uk':
                  type: string
                  description: 'Тег title на украинском'
                  example: ipsum
                'meta_description:en':
                  type: string
                  description: 'Тег description на английском'
                  example: voluptatem
                'meta_description:uk':
                  type: string
                  description: 'Тег description на украинском'
                  example: unde
                image:
                  type: string
                  description: 'Картинка в base64'
                  example: voluptatem
                'filename1:uk':
                  type: string
                  description: 'optional Название файла 1 на украинском'
                  example: ducimus
                'filename1:en':
                  type: string
                  description: 'optional Название файла 1 на английском'
                  example: necessitatibus
                'filename2:uk':
                  type: string
                  description: 'optional Название файла 2 на украинском'
                  example: explicabo
                'filename2:en':
                  type: string
                  description: 'optional Название файла 2 на английском'
                  example: omnis
                'filename3:uk':
                  type: string
                  description: 'optional Название файла 3 на украинском'
                  example: accusamus
                'filename3:en':
                  type: string
                  description: 'optional Название файла 3 на английском'
                  example: quae
                file_1:
                  type: string
                  description: 'optional Файл1 к услуге'
                  example: aut
                file_2:
                  type: string
                  description: 'optional Файл2 к услуге'
                  example: architecto
                file_3:
                  type: string
                  description: 'optional Файл3 к услуге'
                  example: omnis
              required:
                - 'name:en'
                - 'name:uk'
                - category_id
  '/api/v1/page/{id}':
    get:
      summary: 'Get specified page'
      description: ''
      parameters:
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: possimus
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: possimus
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Pages
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
      security: []
    put:
      summary: 'Update specified page'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Pages
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
                'name:en':
                  type: string
                  description: 'Название на английском'
                  example: aut
                'name:uk':
                  type: string
                  description: 'Название на украинском'
                  example: at
                'text:en':
                  type: string
                  description: 'Текст новости на английском'
                  example: ea
                'text:uk':
                  type: string
                  description: 'Текст новости на украинском'
                  example: in
                category_id:
                  type: integer
                  description: 'ID Категории страниц'
                  example: 16
                'meta_title:en':
                  type: string
                  description: 'Тег title на английском'
                  example: unde
                'meta_title:uk':
                  type: string
                  description: 'Тег title на украинском'
                  example: et
                'meta_description:en':
                  type: string
                  description: 'Тег description на английском'
                  example: vel
                'meta_description:uk':
                  type: string
                  description: 'Тег description на украинском'
                  example: ratione
                image:
                  type: string
                  description: 'Картинка в base64'
                  example: occaecati
                'filename1:uk':
                  type: string
                  description: 'optional Название файла 1 на украинском'
                  example: enim
                'filename1:en':
                  type: string
                  description: 'optional Название файла 1 на английском'
                  example: magnam
                'filename2:uk':
                  type: string
                  description: 'optional Название файла 2 на украинском'
                  example: sed
                'filename2:en':
                  type: string
                  description: 'optional Название файла 2 на английском'
                  example: voluptatem
                'filename3:uk':
                  type: string
                  description: 'optional Название файла 3 на украинском'
                  example: facilis
                'filename3:en':
                  type: string
                  description: 'optional Название файла 3 на английском'
                  example: ullam
                file_1:
                  type: string
                  description: 'optional Файл1 к услуге'
                  example: molestias
                file_2:
                  type: string
                  description: 'optional Файл2 к услуге'
                  example: ipsa
                file_3:
                  type: string
                  description: 'optional Файл3 к услуге'
                  example: totam
    delete:
      summary: 'Delete specified page'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Pages
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the page.'
        example: 3
        required: true
        schema:
          type: integer
  /api/v1/web/pages:
    get:
      summary: 'List of page'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 7
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 7
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: magnam
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: magnam
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: aperiam
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: aperiam
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: beatae
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: beatae
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 7
                  data: []
                  first_page_url: 'https://estater.biz/api/v1/web/pages?page=1'
                  from: null
                  last_page: 1
                  last_page_url: 'https://estater.biz/api/v1/web/pages?page=1'
                  links:
                    -
                      url: 'https://estater.biz/api/v1/web/pages?page=6'
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'https://estater.biz/api/v1/web/pages?page=1'
                      label: '1'
                      active: false
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'https://estater.biz/api/v1/web/pages'
                  per_page: 15
                  prev_page_url: 'https://estater.biz/api/v1/web/pages?page=6'
                  to: null
                  total: 0
                properties:
                  current_page:
                    type: integer
                    example: 7
                  data:
                    type: array
                    example: []
                  first_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/pages?page=1'
                  from:
                    type: string
                    example: null
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/pages?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: 'https://estater.biz/api/v1/web/pages?page=6'
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'https://estater.biz/api/v1/web/pages?page=1'
                        label: '1'
                        active: false
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'https://estater.biz/api/v1/web/pages'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/pages?page=6'
                  to:
                    type: string
                    example: null
                  total:
                    type: integer
                    example: 0
      tags:
        - Pages
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
      security: []
  '/api/v1/web/page/{uri}':
    get:
      summary: 'Get specified page'
      description: ''
      parameters:
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: quia
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: quia
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Ресурс не знайдено.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Ресурс не знайдено.'
      tags:
        - Pages
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
      security: []
    parameters:
      -
        in: path
        name: uri
        description: ''
        example: 5
        required: true
        schema:
          type: integer
  '/api/v1/web/page/preview/{id}':
    get:
      summary: 'Get specified page'
      description: ''
      parameters:
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: dicta
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: dicta
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Not found.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Not found.'
      tags:
        - Pages
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the preview.'
        example: et
        required: true
        schema:
          type: string
  /api/v1/reports:
    get:
      summary: 'List of reports'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 16
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 16
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: itaque
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: itaque
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: sed
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: sed
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden)'
          example: aspernatur
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden)'
            example: aspernatur
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: dolores
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: dolores
        -
          in: query
          name: full
          description: 'Получение списка без пагинации'
          example: true
          required: false
          schema:
            type: boolean
            description: 'Получение списка без пагинации'
            example: true
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Reports
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: hidden
      security: []
  /api/v1/report:
    post:
      summary: 'Create report'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Reports
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  description: 'Статус отображения (1-отображается, 0-скрыто)'
                  example: 1
                year:
                  type: integer
                  description: 'год отчета'
                  example: 3
                month:
                  type: integer
                  description: 'месяц отчета'
                  example: 14
                file:
                  type: optional
                  description: 'Файл к отчету'
                  example: at
              required:
                - year
                - month
  '/api/v1/report/{id}':
    get:
      summary: 'Get specified report'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Reports
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: visible
      security: []
    put:
      summary: 'Update specified report'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Reports
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  description: 'optional Статус отображения (1-отображается, 0-скрыто)'
                  example: 1
                year:
                  type: integer
                  description: 'optional год отчета'
                  example: 14
                month:
                  type: integer
                  description: 'optional месяц отчета'
                  example: 12
    delete:
      summary: 'Delete specified report'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Reports
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the report.'
        example: 10
        required: true
        schema:
          type: integer
  /api/v1/web/reports:
    get:
      summary: 'List of reports'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 7
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 7
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: ut
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: ut
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: esse
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: esse
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden)'
          example: sit
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden)'
            example: sit
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: ut
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: ut
        -
          in: query
          name: full
          description: 'Получение списка без пагинации'
          example: false
          required: false
          schema:
            type: boolean
            description: 'Получение списка без пагинации'
            example: false
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'SQLSTATE[42S22]: Column not found: 1054 Unknown column ''translation_like'' in ''where clause'' (SQL: select count(*) as aggregate from `reports` where `translation_like` = name and `published_at` is null and `reports`.`deleted_at` is null)'
                  exception: Illuminate\Database\QueryException
                  file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                  line: 712
                  trace:
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                      line: 672
                      function: runQueryCallback
                      class: Illuminate\Database\Connection
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                      line: 376
                      function: run
                      class: Illuminate\Database\Connection
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                      line: 2414
                      function: select
                      class: Illuminate\Database\Connection
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                      line: 2402
                      function: runSelect
                      class: Illuminate\Database\Query\Builder
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                      line: 2936
                      function: 'Illuminate\Database\Query\{closure}'
                      class: Illuminate\Database\Query\Builder
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                      line: 2403
                      function: onceWithColumns
                      class: Illuminate\Database\Query\Builder
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                      line: 2550
                      function: get
                      class: Illuminate\Database\Query\Builder
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                      line: 2509
                      function: runPaginationCountQuery
                      class: Illuminate\Database\Query\Builder
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Builder.php
                      line: 808
                      function: getCountForPagination
                      class: Illuminate\Database\Query\Builder
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/app/Models/Report.php
                      line: 74
                      function: paginate
                      class: Illuminate\Database\Eloquent\Builder
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/app/Http/Controllers/ReportController.php
                      line: 36
                      function: getAll
                      class: App\Models\Report
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Routing/Controller.php
                      line: 54
                      function: index
                      class: App\Http\Controllers\ReportController
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php
                      line: 45
                      function: callAction
                      class: Illuminate\Routing\Controller
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 262
                      function: dispatch
                      class: Illuminate\Routing\ControllerDispatcher
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 205
                      function: runController
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 721
                      function: run
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 128
                      function: 'Illuminate\Routing\{closure}'
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/app/Http/Middleware/SetLocale.php
                      line: 24
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 167
                      function: handle
                      class: App\Http\Middleware\SetLocale
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 167
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 127
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 103
                      function: handleRequest
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 55
                      function: handleRequestUsingNamedLimiter
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 167
                      function: handle
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 103
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 723
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 698
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 662
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 651
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 167
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 128
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 167
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php
                      line: 40
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 167
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 167
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php
                      line: 86
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 167
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/fruitcake/laravel-cors/src/HandleCors.php
                      line: 52
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 167
                      function: handle
                      class: Fruitcake\Cors\HandleCors
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php
                      line: 39
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 167
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 103
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 142
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 111
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 299
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 287
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 89
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 45
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 222
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 179
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 116
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 117
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 75
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 51
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                      line: 50
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Container/Util.php
                      line: 40
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 37
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Container/Container.php
                      line: 653
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 136
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/symfony/console/Command/Command.php
                      line: 298
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 121
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/symfony/console/Application.php
                      line: 1015
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/symfony/console/Application.php
                      line: 299
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/symfony/console/Application.php
                      line: 171
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Console/Application.php
                      line: 94
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                      line: 129
                      function: run
                      class: Illuminate\Console\Application
                      type: '->'
                    -
                      file: /var/www/vhosts/misc/druzhkovka/artisan
                      line: 37
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: 'SQLSTATE[42S22]: Column not found: 1054 Unknown column ''translation_like'' in ''where clause'' (SQL: select count(*) as aggregate from `reports` where `translation_like` = name and `published_at` is null and `reports`.`deleted_at` is null)'
                  exception:
                    type: string
                    example: Illuminate\Database\QueryException
                  file:
                    type: string
                    example: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                  line:
                    type: integer
                    example: 712
                  trace:
                    type: array
                    example:
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                        line: 672
                        function: runQueryCallback
                        class: Illuminate\Database\Connection
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                        line: 376
                        function: run
                        class: Illuminate\Database\Connection
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                        line: 2414
                        function: select
                        class: Illuminate\Database\Connection
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                        line: 2402
                        function: runSelect
                        class: Illuminate\Database\Query\Builder
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                        line: 2936
                        function: 'Illuminate\Database\Query\{closure}'
                        class: Illuminate\Database\Query\Builder
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                        line: 2403
                        function: onceWithColumns
                        class: Illuminate\Database\Query\Builder
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                        line: 2550
                        function: get
                        class: Illuminate\Database\Query\Builder
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                        line: 2509
                        function: runPaginationCountQuery
                        class: Illuminate\Database\Query\Builder
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Builder.php
                        line: 808
                        function: getCountForPagination
                        class: Illuminate\Database\Query\Builder
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/app/Models/Report.php
                        line: 74
                        function: paginate
                        class: Illuminate\Database\Eloquent\Builder
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/app/Http/Controllers/ReportController.php
                        line: 36
                        function: getAll
                        class: App\Models\Report
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Routing/Controller.php
                        line: 54
                        function: index
                        class: App\Http\Controllers\ReportController
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php
                        line: 45
                        function: callAction
                        class: Illuminate\Routing\Controller
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 262
                        function: dispatch
                        class: Illuminate\Routing\ControllerDispatcher
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 205
                        function: runController
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 721
                        function: run
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 128
                        function: 'Illuminate\Routing\{closure}'
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/app/Http/Middleware/SetLocale.php
                        line: 24
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 167
                        function: handle
                        class: App\Http\Middleware\SetLocale
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 167
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 127
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 103
                        function: handleRequest
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 55
                        function: handleRequestUsingNamedLimiter
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 167
                        function: handle
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 103
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 723
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 698
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 662
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 651
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 167
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 128
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 167
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php
                        line: 40
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 167
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 167
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php
                        line: 86
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 167
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/fruitcake/laravel-cors/src/HandleCors.php
                        line: 52
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 167
                        function: handle
                        class: Fruitcake\Cors\HandleCors
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php
                        line: 39
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 167
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 103
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 142
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 111
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 299
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 287
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 89
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 45
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 222
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 179
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 116
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 117
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 75
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 51
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                        line: 50
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Container/Util.php
                        line: 40
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 37
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Container/Container.php
                        line: 653
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 136
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/symfony/console/Command/Command.php
                        line: 298
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 121
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/symfony/console/Application.php
                        line: 1015
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/symfony/console/Application.php
                        line: 299
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/symfony/console/Application.php
                        line: 171
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Console/Application.php
                        line: 94
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                        line: 129
                        function: run
                        class: Illuminate\Console\Application
                        type: '->'
                      -
                        file: /var/www/vhosts/misc/druzhkovka/artisan
                        line: 37
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
      tags:
        - Reports
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: hidden
      security: []
  '/api/v1/web/report/{id}':
    get:
      summary: 'Get specified report'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Not found.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Not found.'
      tags:
        - Reports
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: hidden
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the report.'
        example: 13
        required: true
        schema:
          type: integer
  /api/v1/roles:
    get:
      summary: 'List of roles'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 10
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 10
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''name|аsc'''
          example: porro
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''name|аsc'''
            example: porro
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: aut
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: aut
        -
          in: query
          name: user_id
          description: 'ID пользователя (для просмотра всех ролей пользователя)'
          example: 10
          required: false
          schema:
            type: integer
            description: 'ID пользователя (для просмотра всех ролей пользователя)'
            example: 10
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Roles
  /api/v1/role:
    post:
      summary: 'Create a role'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Roles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Название роли (максимальная длина 50 символов)'
                  example: quam
                module_id:
                  type: integer
                  description: 'optional Массив IDs модулей админ-панели'
                  example: 6
              required:
                - name
  '/api/v1/role/{id}':
    get:
      summary: 'Get specified role'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Roles
    put:
      summary: 'Update specified role'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Roles
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Название роли'
                  example: veritatis
                module_id:
                  type: integer
                  description: 'optional Массив IDs модулей админ-панели'
                  example: 20
    delete:
      summary: 'Delete specified role'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Roles
    parameters:
      -
        in: path
        name: id
        description: ''
        example: 14
        required: true
        schema:
          type: integer
  /api/v1/web/search:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: query
          name: q
          description: 'строка поиска'
          example: sit
          required: false
          schema:
            type: string
            description: 'строка поиска'
            example: sit
        -
          in: query
          name: lang
          description: 'optional На каком языке возвращать результаты (возможные значения uk, en)'
          example: accusantium
          required: false
          schema:
            type: string
            description: 'optional На каком языке возвращать результаты (возможные значения uk, en)'
            example: accusantium
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The given data was invalid.'
                  errors:
                    q:
                      - 'The q must be at least 3 characters.'
                properties:
                  message:
                    type: string
                    example: 'The given data was invalid.'
                  errors:
                    type: object
                    example:
                      q:
                        - 'The q must be at least 3 characters.'
      tags:
        - Search
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: 'Текст у полі value повинен містити не менше 3 символів.'
                  example: m
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
              required:
                - q
      security: []
  /api/v1/sectors:
    get:
      summary: 'List of sectors'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 15
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 15
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: eos
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: eos
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: quas
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: quas
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden)'
          example: maiores
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden)'
            example: maiores
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: accusamus
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: accusamus
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Sectors of services'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: visible
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
      security: []
  '/api/v1/sector/{id}':
    put:
      summary: 'Update specified sector'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Sectors of services'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  description: 'Статус отображения (1-отображается, 0-скрыто)'
                  example: 3
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
                'name:en':
                  type: string
                  description: 'Название на английском'
                  example: esse
                'name:uk':
                  type: string
                  description: 'Название на украинском'
                  example: non
                'meta_title:en':
                  type: string
                  description: 'Тег title на английском'
                  example: quod
                'meta_title:uk':
                  type: string
                  description: 'Тег title на украинском'
                  example: omnis
                'meta_description:en':
                  type: string
                  description: 'Тег description на английском'
                  example: reiciendis
                'meta_description:uk':
                  type: string
                  description: 'Тег description на украинском'
                  example: iusto
                image:
                  type: string
                  description: 'optional Картинка в base64'
                  example: officiis
                image_delete:
                  type: integer
                  description: 'optional Удаление картинки (1-удалить)'
                  example: 2
              required:
                - 'name:en'
                - 'name:uk'
    delete:
      summary: 'Delete specified sector'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Sectors of services'
    get:
      summary: 'Get specified sector'
      description: ''
      parameters:
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: maiores
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: maiores
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Sectors of services'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: hidden
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sector.'
        example: 19
        required: true
        schema:
          type: integer
  /api/v1/sector:
    post:
      summary: 'Create sector'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Sectors of services'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  description: 'optional Статус отображения (1-отображается, 0-скрыто)'
                  example: 3
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
                'name:en':
                  type: string
                  description: 'Название на английском'
                  example: numquam
                'name:uk':
                  type: string
                  description: 'Название на украинском'
                  example: consectetur
                'meta_title:en':
                  type: string
                  description: 'optional Тег title на английском'
                  example: sunt
                'meta_title:uk':
                  type: string
                  description: 'optional Тег title на украинском'
                  example: numquam
                'meta_description:en':
                  type: string
                  description: 'optional Тег description на английском'
                  example: ab
                'meta_description:uk':
                  type: string
                  description: 'optional Тег description на украинском'
                  example: rerum
                image:
                  type: string
                  description: 'optional Картинка в base64'
                  example: alias
              required:
                - 'name:en'
                - 'name:uk'
  /api/v1/web/sectors:
    get:
      summary: 'List of sectors'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 19
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 19
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: quia
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: quia
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: officia
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: officia
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden)'
          example: est
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden)'
            example: est
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: doloremque
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: doloremque
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 19
                  data: []
                  first_page_url: 'https://estater.biz/api/v1/web/sectors?page=1'
                  from: null
                  last_page: 1
                  last_page_url: 'https://estater.biz/api/v1/web/sectors?page=1'
                  links:
                    -
                      url: 'https://estater.biz/api/v1/web/sectors?page=18'
                      label: '&laquo; Назад'
                      active: false
                    -
                      url: 'https://estater.biz/api/v1/web/sectors?page=1'
                      label: '1'
                      active: false
                    -
                      url: null
                      label: 'Далі &raquo;'
                      active: false
                  next_page_url: null
                  path: 'https://estater.biz/api/v1/web/sectors'
                  per_page: 15
                  prev_page_url: 'https://estater.biz/api/v1/web/sectors?page=18'
                  to: null
                  total: 0
                properties:
                  current_page:
                    type: integer
                    example: 19
                  data:
                    type: array
                    example: []
                  first_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/sectors?page=1'
                  from:
                    type: string
                    example: null
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/sectors?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: 'https://estater.biz/api/v1/web/sectors?page=18'
                        label: '&laquo; Назад'
                        active: false
                      -
                        url: 'https://estater.biz/api/v1/web/sectors?page=1'
                        label: '1'
                        active: false
                      -
                        url: null
                        label: 'Далі &raquo;'
                        active: false
                    items:
                      type: object
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'https://estater.biz/api/v1/web/sectors'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/sectors?page=18'
                  to:
                    type: string
                    example: null
                  total:
                    type: integer
                    example: 0
      tags:
        - 'Sectors of services'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: hidden
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
      security: []
  '/api/v1/web/sector/{uri}':
    get:
      summary: 'Get specified sector'
      description: ''
      parameters:
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: voluptas
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: voluptas
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Not found.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Not found.'
      tags:
        - 'Sectors of services'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: hidden
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
      security: []
    parameters:
      -
        in: path
        name: uri
        description: ''
        example: 2
        required: true
        schema:
          type: integer
  /api/v1/services:
    get:
      summary: 'List of services'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 2
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 2
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: nobis
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: nobis
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: nesciunt
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: nesciunt
        -
          in: query
          name: service_id
          description: 'ID сферы услуг'
          example: 4
          required: false
          schema:
            type: integer
            description: 'ID сферы услуг'
            example: 4
        -
          in: query
          name: category_id
          description: 'ID категории услуг'
          example: 16
          required: false
          schema:
            type: integer
            description: 'ID категории услуг'
            example: 16
        -
          in: query
          name: institution_id
          description: 'ID субъекта оказания услуг'
          example: 3
          required: false
          schema:
            type: integer
            description: 'ID субъекта оказания услуг'
            example: 3
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden)'
          example: doloribus
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden)'
            example: doloribus
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: praesentium
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: praesentium
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Services
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: visible
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
      security: []
  /api/v1/service:
    post:
      summary: 'Create service'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Services
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  description: 'optional Статус отображения (1-отображается, 0-скрыто)'
                  example: 20
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
                code:
                  type: string
                  description: 'Номер (код) услуги'
                  example: quo
                sector_id:
                  type: integer
                  description: 'ID сферы услуг'
                  example: 20
                category_id:
                  type: integer
                  description: 'ID категории услуг'
                  example: 8
                institution_id:
                  type: integer
                  description: 'ID субъекта оказания услуг'
                  example: 15
                'name:en':
                  type: string
                  description: 'Название на английском'
                  example: ex
                'name:uk':
                  type: string
                  description: 'Название на украинском'
                  example: et
                'text:en':
                  type: string
                  description: 'optional Описание услуги на английском'
                  example: ea
                'text:uk':
                  type: string
                  description: 'optional Описание услуги на украинском'
                  example: quisquam
                'meta_title:en':
                  type: string
                  description: 'optional Тег title на английском'
                  example: distinctio
                'meta_title:uk':
                  type: string
                  description: 'optional Тег title на украинском'
                  example: in
                'meta_description:en':
                  type: string
                  description: 'optional Тег description на английском'
                  example: quos
                'meta_description:uk':
                  type: string
                  description: 'optional Тег description на украинском'
                  example: alias
                is_online:
                  type: integer
                  description: 'optional Возможность заказать услугу онлайн (1-онлайн, 0-не онлайн)'
                  example: 2
                tag_id:
                  type: array
                  description: 'Массив IDs тегов optional'
                  example:
                    - 8
                  items:
                    type: integer
                'filename1:uk':
                  type: string
                  description: 'optional Название файла 1 на украинском'
                  example: repellendus
                'filename1:en':
                  type: string
                  description: 'optional Название файла 1 на английском'
                  example: modi
                'filename2:uk':
                  type: string
                  description: 'optional Название файла 2 на украинском'
                  example: esse
                'filename2:en':
                  type: string
                  description: 'optional Название файла 2 на английском'
                  example: distinctio
                'place:uk':
                  type: string
                  description: 'optional Место оказания услуги на украинском'
                  example: possimus
                'place:en':
                  type: string
                  description: 'optional Место оказания услуги на английском'
                  example: vero
                'term:uk':
                  type: string
                  description: 'optional Срок на украинском'
                  example: eius
                'term:en':
                  type: string
                  description: 'optional Срок 2 на английском'
                  example: nemo
                is_free:
                  type: integer
                  description: 'optional Стоимость услуги (1-бесплатно, 0-платно)'
                  example: 2
                file_1:
                  type: string
                  description: 'optional Файл1 к услуге'
                  example: ut
                file_2:
                  type: string
                  description: 'optional Файл2 к услуге'
                  example: nisi
              required:
                - sector_id
                - category_id
                - institution_id
                - 'name:en'
                - 'name:uk'
  '/api/v1/service/{id}':
    get:
      summary: 'Get specified service'
      description: ''
      parameters:
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: ab
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: ab
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Services
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: visible
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
      security: []
    put:
      summary: 'Update specified service'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Services
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  description: 'optional Статус отображения (1-отображается, 0-скрыто)'
                  example: 19
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
                code:
                  type: string
                  description: 'Номер (код) услуги'
                  example: corrupti
                sector_id:
                  type: integer
                  description: 'ID сферы услуг'
                  example: 16
                category_id:
                  type: integer
                  description: 'ID категории услуг'
                  example: 7
                institution_id:
                  type: integer
                  description: 'ID субъекта оказания услуг'
                  example: 4
                'name:en':
                  type: string
                  description: 'Название на английском'
                  example: veniam
                'name:uk':
                  type: string
                  description: 'Название на украинском'
                  example: optio
                'text:en':
                  type: string
                  description: 'optional Описание услуги на английском'
                  example: id
                'text:uk':
                  type: string
                  description: 'optional Описание услуги на украинском'
                  example: iure
                'meta_title:en':
                  type: string
                  description: 'optional Тег title на английском'
                  example: ipsam
                'meta_title:uk':
                  type: string
                  description: 'optional Тег title на украинском'
                  example: saepe
                'meta_description:en':
                  type: string
                  description: 'optional Тег description на английском'
                  example: nobis
                'meta_description:uk':
                  type: string
                  description: 'optional Тег description на украинском'
                  example: quas
                is_online:
                  type: integer
                  description: 'optional Возможность заказать услугу онлайн (1-онлайн, 0-не онлайн)'
                  example: 5
                tag_id:
                  type: array
                  description: 'Массив IDs тегов optional'
                  example:
                    - 11
                  items:
                    type: integer
                'filename1:uk':
                  type: string
                  description: 'optional Название файла 1 на украинском'
                  example: at
                'filename1:en':
                  type: string
                  description: 'optional Название файла 1 на английском'
                  example: est
                'filename2:uk':
                  type: string
                  description: 'optional Название файла 2 на украинском'
                  example: at
                'filename2:en':
                  type: string
                  description: 'optional Название файла 2 на английском'
                  example: eos
                'place:uk':
                  type: string
                  description: 'optional Место оказания услуги на украинском'
                  example: qui
                'place:en':
                  type: string
                  description: 'optional Место оказания услуги на английском'
                  example: occaecati
                'term:uk':
                  type: string
                  description: 'optional Срок на украинском'
                  example: tempore
                'term:en':
                  type: string
                  description: 'optional Срок 2 на английском'
                  example: exercitationem
                is_free:
                  type: integer
                  description: 'optional Стоимость услуги (1-бесплатно, 0-платно)'
                  example: 12
                file_1:
                  type: string
                  description: 'optional Файл1 к услуге'
                  example: iure
                file_2:
                  type: string
                  description: 'optional Файл2 к услуге'
                  example: exercitationem
              required:
                - sector_id
                - category_id
                - institution_id
                - 'name:en'
                - 'name:uk'
    delete:
      summary: 'Delete specified service'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Services
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the service.'
        example: 10
        required: true
        schema:
          type: integer
  /api/v1/web/services:
    get:
      summary: 'List of services'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 8
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 8
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: voluptatem
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: voluptatem
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: officiis
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: officiis
        -
          in: query
          name: service_id
          description: 'ID сферы услуг'
          example: 7
          required: false
          schema:
            type: integer
            description: 'ID сферы услуг'
            example: 7
        -
          in: query
          name: category_id
          description: 'ID категории услуг'
          example: 2
          required: false
          schema:
            type: integer
            description: 'ID категории услуг'
            example: 2
        -
          in: query
          name: institution_id
          description: 'ID субъекта оказания услуг'
          example: 9
          required: false
          schema:
            type: integer
            description: 'ID субъекта оказания услуг'
            example: 9
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden)'
          example: minus
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden)'
            example: minus
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: dicta
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: dicta
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 8
                  data: []
                  first_page_url: 'https://estater.biz/api/v1/web/services?page=1'
                  from: null
                  last_page: 1
                  last_page_url: 'https://estater.biz/api/v1/web/services?page=1'
                  links:
                    -
                      url: 'https://estater.biz/api/v1/web/services?page=7'
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'https://estater.biz/api/v1/web/services?page=1'
                      label: '1'
                      active: false
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'https://estater.biz/api/v1/web/services'
                  per_page: 15
                  prev_page_url: 'https://estater.biz/api/v1/web/services?page=7'
                  to: null
                  total: 0
                properties:
                  current_page:
                    type: integer
                    example: 8
                  data:
                    type: array
                    example: []
                  first_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/services?page=1'
                  from:
                    type: string
                    example: null
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/services?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: 'https://estater.biz/api/v1/web/services?page=7'
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'https://estater.biz/api/v1/web/services?page=1'
                        label: '1'
                        active: false
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'https://estater.biz/api/v1/web/services'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/services?page=7'
                  to:
                    type: string
                    example: null
                  total:
                    type: integer
                    example: 0
      tags:
        - Services
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: hidden
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
      security: []
  '/api/v1/web/service/{uri}':
    get:
      summary: 'Get specified service'
      description: ''
      parameters:
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: magnam
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: magnam
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Not found.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Not found.'
      tags:
        - Services
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: hidden
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
      security: []
    parameters:
      -
        in: path
        name: uri
        description: ''
        example: 6
        required: true
        schema:
          type: integer
  '/api/v1/web/service/preview/{id}':
    get:
      summary: 'Get specified service'
      description: ''
      parameters:
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: consequatur
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: consequatur
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Ресурс не знайдено.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Ресурс не знайдено.'
      tags:
        - Services
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>visible</code> or <code>hidden</code>.'
                  example: hidden
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the preview.'
        example: voluptas
        required: true
        schema:
          type: string
  /api/v1/tags:
    get:
      summary: 'List of tags'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 13
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 13
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: molestiae
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: molestiae
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: quo
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: quo
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden)'
          example: voluptatem
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden)'
            example: voluptatem
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: vel
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: vel
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Tags
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
      security: []
  /api/v1/tag:
    post:
      summary: 'Create tag'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Tags
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
                'name:en':
                  type: string
                  description: 'Название на английском'
                  example: dicta
                'name:uk':
                  type: string
                  description: 'Название на украинском'
                  example: nesciunt
              required:
                - 'name:en'
                - 'name:uk'
  '/api/v1/tag/{id}':
    get:
      summary: 'Get specified tag'
      description: ''
      parameters:
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: amet
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: amet
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Tags
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: uk
      security: []
    put:
      summary: 'Update specified tag'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Tags
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
                'name:en':
                  type: string
                  description: 'Название на английском'
                  example: eos
                'name:uk':
                  type: string
                  description: 'Название на украинском'
                  example: aperiam
              required:
                - 'name:en'
                - 'name:uk'
    delete:
      summary: 'Delete specified tag'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Tags
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the tag.'
        example: 11
        required: true
        schema:
          type: integer
  /api/v1/web/tags:
    get:
      summary: 'List of tags'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 17
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 17
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
          example: harum
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию  ''id|desc'''
            example: harum
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: voluptatem
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: voluptatem
        -
          in: query
          name: status
          description: 'Статус отображения (возможные значения visible, hidden)'
          example: alias
          required: false
          schema:
            type: string
            description: 'Статус отображения (возможные значения visible, hidden)'
            example: alias
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: eveniet
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: eveniet
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 17
                  data: []
                  first_page_url: 'https://estater.biz/api/v1/web/tags?page=1'
                  from: null
                  last_page: 1
                  last_page_url: 'https://estater.biz/api/v1/web/tags?page=1'
                  links:
                    -
                      url: 'https://estater.biz/api/v1/web/tags?page=16'
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'https://estater.biz/api/v1/web/tags?page=1'
                      label: '1'
                      active: false
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'https://estater.biz/api/v1/web/tags'
                  per_page: 15
                  prev_page_url: 'https://estater.biz/api/v1/web/tags?page=16'
                  to: null
                  total: 0
                properties:
                  current_page:
                    type: integer
                    example: 17
                  data:
                    type: array
                    example: []
                  first_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/tags?page=1'
                  from:
                    type: string
                    example: null
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/tags?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: 'https://estater.biz/api/v1/web/tags?page=16'
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'https://estater.biz/api/v1/web/tags?page=1'
                        label: '1'
                        active: false
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'https://estater.biz/api/v1/web/tags'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: 'https://estater.biz/api/v1/web/tags?page=16'
                  to:
                    type: string
                    example: null
                  total:
                    type: integer
                    example: 0
      tags:
        - Tags
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
      security: []
  '/api/v1/web/tag/{id}':
    get:
      summary: 'Get specified tag'
      description: ''
      parameters:
        -
          in: query
          name: lang
          description: 'На каком языке возвращать результаты (возможные значения uk, en)'
          example: fuga
          required: false
          schema:
            type: string
            description: 'На каком языке возвращать результаты (возможные значения uk, en)'
            example: fuga
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Not found.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Not found.'
      tags:
        - Tags
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                lang:
                  type: string
                  description: 'Must be one of <code>uk</code> or <code>en</code>.'
                  example: en
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the tag.'
        example: 4
        required: true
        schema:
          type: integer
  /api/v1/token:
    post:
      summary: 'Get token for user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Email
                  example: placeat
                password:
                  type: string
                  description: Пароль
                  example: quod
              required:
                - email
                - password
      security: []
  /api/v1/login:
    post:
      summary: 'Login user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Users
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Email
                  example: velit
                password:
                  type: string
                  description: Пароль
                  example: est
      security: []
  /api/v1/users:
    get:
      summary: 'List of users'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Номер страницы с результатами выдачи'
          example: 9
          required: false
          schema:
            type: integer
            description: 'Номер страницы с результатами выдачи'
            example: 9
        -
          in: query
          name: sort
          description: 'Поле для сортировки. По-умолчанию ''id|desc'''
          example: quia
          required: false
          schema:
            type: string
            description: 'Поле для сортировки. По-умолчанию ''id|desc'''
            example: quia
        -
          in: query
          name: search
          description: 'Строка, которая должна содержаться в результатах выдачи'
          example: quas
          required: false
          schema:
            type: string
            description: 'Строка, которая должна содержаться в результатах выдачи'
            example: quas
        -
          in: query
          name: role_id
          description: 'IDs ролей пользователей через запятую (для получения списка пользователей по роли)'
          example: explicabo
          required: false
          schema:
            type: string
            description: 'IDs ролей пользователей через запятую (для получения списка пользователей по роли)'
            example: explicabo
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Users
  /api/v1/user:
    post:
      summary: 'Create a user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                  description: Имя
                  example: et
                lastname:
                  type: string
                  description: Фамилия
                  example: ea
                email:
                  type: string
                  description: Email
                  example: enim
                password:
                  type: string
                  description: Пароль
                  example: laborum
                password_confirmation:
                  type: string
                  description: 'Пароль підтвердження'
                  example: blanditiis
                role_id:
                  type: array
                  description: 'optional Массив IDs ролей пользователей'
                  example:
                    - 13
                  items:
                    type: integer
              required:
                - firstname
                - lastname
                - email
                - password
                - password_confirmation
    get:
      summary: 'Get specified user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Users
  '/api/v1/user/{id}':
    get:
      summary: 'Get specified user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Users
    put:
      summary: 'Update specified user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                  description: Имя
                  example: architecto
                lastname:
                  type: string
                  description: Фамилия
                  example: itaque
                email:
                  type: string
                  description: Email
                  example: veniam
                password:
                  type: string
                  description: Пароль
                  example: qui
                password_confirmation:
                  type: string
                  description: 'Пароль підтвердження'
                  example: at
                role_id:
                  type: array
                  description: 'Массив IDs ролей пользователей'
                  example:
                    - 7
                  items:
                    type: integer
              required:
                - password_confirmation
    delete:
      summary: 'Delete specified user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Users
    parameters:
      -
        in: path
        name: id
        description: ''
        example: 14
        required: true
        schema:
          type: integer
tags:
  -
    name: Queues
    description: "\nAPI для работы с очередями"
  -
    name: 'Category of Laws'
    description: "\nAPI для работы с категориями законов."
  -
    name: 'Category of Links'
    description: "\nAPI для работы с категориями ссылок."
  -
    name: 'Category of Pages'
    description: "\nAPI для работы с категориями статических страниц."
  -
    name: 'Category of news'
    description: "\nAPI для работы со категориями новостей."
  -
    name: 'Category of services'
    description: "\nAPI для работы со категориями услуг."
  -
    name: Entries
    description: "\nAPI для работы с входными заявками"
  -
    name: 'Entry Reviews'
    description: "\nAPI для работы с комментариями к заявкам"
  -
    name: Feedbacks
    description: "\nAPI для работы с отзывами."
  -
    name: 'Institutions of services'
    description: "\nAPI для работы с субъектами оказания услуг."
  -
    name: Laws
    description: "\nAPI для работы с законами."
  -
    name: Links
    description: "\nAPI для работы с ссылками."
  -
    name: Modules
    description: "\nAPI для работы с разделами админ панели"
  -
    name: News
    description: "\nAPI для работы с новостями."
  -
    name: Other
    description: ''
  -
    name: Pages
    description: "\nAPI для работы со статическими страницами."
  -
    name: Reports
    description: "\nAPI для работы с отчетами."
  -
    name: Roles
    description: "\nAPI для работы с ролями пользователей админ панели"
  -
    name: Search
    description: "\nAPI для глобального поиска."
  -
    name: 'Sectors of services'
    description: "\nAPI для работы со сферами услуг."
  -
    name: Services
    description: "\nAPI для работы с услугами."
  -
    name: Tags
    description: "\nAPI для работы со поисковыми запросами (тегами)."
  -
    name: Users
    description: "\nAPI для работы с пользователями админ панели"
